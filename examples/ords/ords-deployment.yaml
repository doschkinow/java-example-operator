apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: oracle-db-ords
spec:
  replicas: 1
  minReadySeconds: 30
  selector:
    matchLabels:
      app: oracle-db-ords
  template:
    metadata:
      labels:
        app: oracle-db-ords
    spec:
      containers:
        - name: oracle-db-ords
          image: fra.ocir.io/oraseemeadesandbox/pdos/oracle/restdataservices:19.2.0
          ports:
            - containerPort: 8888
          livenessProbe:
            tcpSocket:
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 30
          env:
            - name: ORACLE_HOST
              value: oracle-db-service
            - name: ORACLE_SERVICE
              value: ORCLCDB
            - name: ORACLE_PWD
              value: PDos00###
            - name: ORDS_PWD
              value: PDos00###
          imagePullPolicy: Always
          volumeMounts:
            - name: oracle-db-ords-config-persistent
              mountPath: "/opt/oracle/ords/config/ords"

      initContainers:
        - name: setup-configs
          command: ["sh", "-c", "cd /conf && chmod +x *.sh && copy-init-files.sh"]
          image: busybox
          volumeMounts:
            - name: oracle-db-ords-config
              mountPath: "/conf"
            - name: oracle-db-ords-config-persistent
              mountPath: "/opt/oracle/ords/config/ords"
      imagePullSecrets:
        - name: registry-secret

      volumes:
        - name: oracle-db-ords-config
          configMap:
            name: oracle-db-ords-config
        - name: oracle-db-ords-config-persistent
          persistentVolumeClaim:
            claimName: oracle-db-ords

---
apiVersion: v1
kind: Service
metadata:
  name: oracle-db-ords-service
spec:
  ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
  selector:
    app: oracle-db-ords
